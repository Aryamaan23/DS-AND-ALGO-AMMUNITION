## 1) To access a global variable when there is a local variable with same name:
#include<iostream>
using namespace std;

int x; //Global x
int main()
{  
    int x=10;
    cout<<"Value of global is"<<::x;
    cout<<"\nValue of local is"<<x;
    return 0;
}


###Output:
Value of global x is 0
Value of local x is 10

## 2) To define a function outside a class
#include<iostream>
using namespace std;

class A
{
public:
    void fun();
};
void A::fun()
{
    cout<<"fun() called";
}
int main()
{
   A a;
   a.fun();
   return 0;
}

###Output:
fun() called

## 3) To access a class's static variables
#include<iostream>
using namespace std;
class Test
{
   static int x;
public:
   static int y;
   void func(int x)
   {
      cout<<"Value of static x is"<<Test::x;
      cout<<"\nValue of local x is"<<x;
   }
};
int Test::x=1;
int Test::y=2;
int main()
{
     Test obj;
     int x=3;
     obj.func(x);
     cout<<"\nTest::y"<<Test::y;
     return 0;
}

## 4) In case of multiple inheritance
#include<iostream>
using namespace std;
class A
{
protected:
   int x;
public:
  A()
  {
      

